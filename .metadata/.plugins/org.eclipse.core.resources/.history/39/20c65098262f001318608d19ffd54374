package com.example.open.gl.experiment;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;

public class Triangle {
	private FloatBuffer mTriangleVerticesBuff;
	private final int BYTES_PER_FLOAT=4;
	public float mTriangleCoords[];
	public float mTriangleColorCoords[];
	
	public float[] getTriangleColorCoords() {
		return mTriangleColorCoords;
	}
	public void setTriangleColorCoords(float[] mTriangleColorCoords) {
		this.mTriangleColorCoords = mTriangleColorCoords;
	}
	public float[] getTriangleCoords() {
		return mTriangleCoords;
	}
	public void setTriangleCoords(float[] triangleCoords) {
		this.mTriangleCoords = triangleCoords;
	}
	public FloatBuffer getColorFloatBuffer(){
		if(!(mTriangleColorCoords.length<1)){
			mTriangleVerticesBuff=ByteBuffer
							.allocate(BYTES_PER_FLOAT*mTriangleColorCoords.length)
							.order(ByteOrder.nativeOrder()).asFloatBuffer();
			return mTriangleVerticesBuff;
		}else{
			return null;
		}
	}
	public FloatBuffer getPositionFloatBuffer(){
		if(!(mTriangleCoords.length<1)){
			mTriangleVerticesBuff=ByteBuffer
							.allocate(BYTES_PER_FLOAT*mTriangleCoords.length)
							.order(ByteOrder.nativeOrder()).asFloatBuffer();
			return mTriangleVerticesBuff;
		}else{
			return null;
		}
	}
	
}
